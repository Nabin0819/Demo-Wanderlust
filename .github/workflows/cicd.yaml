name: Wanderlust-Continuous-Integration

on:
  push:
    branches:
      - production

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend/
          push: true
          tags: |
            nabin011011/wanderlust-frontend:v1.0
            nabin011011/wanderlust-frontend:${{ github.sha }}

  backend-build:
    runs-on: ubuntu-latest
    needs: frontend-build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend/
          push: true
          tags: |
            nabin011011/wanderlust-backend:v1.0
            nabin011011/wanderlust-backend:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: backend-build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy to AWS Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          port: ${{ secrets.PORT }}
          source: "docker-compose.yaml"
          traget: /home/ubuntu/
          script: |
            echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
            docker-compose up -d
            docker system prune -f
