name: Wanderlust-Continuous-Integration

on:
  push:
    branches:
      - production

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend/
          push: true
          tags: nabin011011/wanderlust-frontend:latest

  backend-build:
    runs-on: ubuntu-latest
    needs: frontend-build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend/
          push: true
          tags: nabin011011/wanderlust-backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: backend-build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Copy docker-compose file to AWS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          port: ${{ secrets.AWS_PORT }}
          source: "docker-compose.yaml"
          target: "/home/ubuntu/"

      - name: Deploy to AWS Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          port: ${{ secrets.AWS_PORT }}
          script: |
            set -e
            sudo apt update
            sudo apt install -y docker-compose
            cd /home/ubuntu/
            if [ ! -f docker-compose.yaml ]; then
              echo "docker-compose.yaml not found!"
              exit 1
            fi
            sudo docker-compose pull || { echo "Docker pull failed"; exit 1; }
            sudo docker-compose up -d || { echo "Docker Compose failed"; exit 1; }
            sudo docker system prune -f
